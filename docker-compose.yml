volumes:
  prometheus_data: {}
  grafana_data: {}
  loki_data: {}

services:
  prometheus:
    container_name: hge-prom
    image: ${PROM_IMAGE}
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    ports:
      - ${PROM_PORT}:9090
    links:
      - alertmanager:alertmanager
    restart: always

  node-exporter:
    container_name: hge-node-exporter
    image: ${NODE_EXPORTER_IMAGE}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - ${NODE_EXPORTER_PORT}:9100
    restart: always

  alertmanager:
    container_name: hge-alert-manager
    image: ${ALERT_MANAGER_IMAGE}
    ports:
      - ${ALERT_MANAGER_PORT}:9093
    volumes:
      - ./alertmanager/config.yml/:/etc/alertmanager/alertmanager.yml
    restart: always

  blackbox_exporter:
    container_name: hge-blackbox
    image: ${BLACKBOX_IMAGE}
    ports:
      - ${BLACKBOX_PORT}:9115
    volumes:
      - ./blackboxexporter/:/etc/blackboxexporter/
    command:
      - "--config.file=/etc/blackboxexporter/config.yml"
    restart: always

  grafana:
    container_name: hge-grafana
    image: ${GRAFANA_IMAGE}
    depends_on:
      - prometheus
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: always
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}

  loki:
    image: ${LOKI_IMAGE}
    ports:
      - ${LOKI_PORT}:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml

  otel-collector:
    container_name: hge-otel-collector
    image: ${OTEL_COLLECTOR_IMAGE}
    command:
      - --config=/etc/otel-collector-config.yaml
    volumes:
      - ./otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      # - ./gcp-sa.json:/etc/otel/gcp-sa.json
    ports:
      - "1888" # pprof extension
      - "8888" # Prometheus metrics exposed by the collector
      - "8889" # Prometheus exporter metrics
      - "13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
      - "55679" # zpages extension
    environment:
      DD_API_KEY: ${DD_API_KEY}
      NEW_RELIC_API_KEY: ${NEW_RELIC_API_KEY}
      HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      HONEYCOMB_DATASET: ${HONEYCOMB_DATASET}
      # GOOGLE_APPLICATION_CREDENTIALS: /etc/otel/gcp-sa.json

  auth-hook:
    build:
      context: examples/auth-hook
